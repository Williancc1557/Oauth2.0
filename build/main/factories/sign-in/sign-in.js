"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.makeSignInController = void 0;
const get_account_by_email_1 = require("../../../data/usecase/get-account-by-email/get-account-by-email");
const reset_refresh_token_1 = require("../../../data/usecase/reset-refresh-token/reset-refresh-token");
const log_1 = require("../../../decorators/log");
const get_account_by_email_repository_1 = require("../../../infra/db/mongodb/account-repository/get-account-by-email-repository/get-account-by-email-repository");
const reset_refresh_token_repository_1 = require("../../../infra/db/mongodb/reset-refresh-token-repository/reset-refresh-token-repository");
const sign_in_1 = require("../../../presentation/controller/sign-in/sign-in");
const utils_1 = require("../../../utils/");
const sign_in_validation_1 = require("./sign-in-validation");
const makeSignInController = () => {
    const getAccountByEmailRepository = new get_account_by_email_repository_1.GetAccountByEmailMongoRepository();
    const getAccountByEmail = new get_account_by_email_1.DbGetAccountByEmail(getAccountByEmailRepository);
    const createRefreshToken = new utils_1.UtilCreateRefreshToken();
    const resetRefreshTokenRepository = new reset_refresh_token_repository_1.ResetRefreshTokenMongoRepository(createRefreshToken);
    const resetRefreshToken = new reset_refresh_token_1.DbResetRefreshToken(resetRefreshTokenRepository);
    const SALTS = 10;
    const encrypter = new utils_1.UtilEncrypter(SALTS);
    const signInController = new sign_in_1.SignInController(getAccountByEmail, resetRefreshToken, encrypter, (0, sign_in_validation_1.makeSignInValidation)());
    return new log_1.LogControllerDecorator(signInController);
};
exports.makeSignInController = makeSignInController;
