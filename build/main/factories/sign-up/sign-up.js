"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.makeSignUpController = void 0;
const add_account_1 = require("../../../data/usecase/add-account/add-account");
const get_account_by_email_1 = require("../../../data/usecase/get-account-by-email/get-account-by-email");
const log_1 = require("../../../decorators/log");
const add_account_repository_1 = require("../../../infra/db/mongodb/account-repository/add-account-repository/add-account-repository");
const get_account_by_email_repository_1 = require("../../../infra/db/mongodb/account-repository/get-account-by-email-repository/get-account-by-email-repository");
const sign_up_1 = require("../../../presentation/controller/sign-up/sign-up");
const utils_1 = require("../../../utils/");
const sign_up_validation_1 = require("./sign-up-validation");
const makeSignUpController = () => {
    const getAccountByEmailRepository = new get_account_by_email_repository_1.GetAccountByEmailMongoRepository();
    const getAccountByEmail = new get_account_by_email_1.DbGetAccountByEmail(getAccountByEmailRepository);
    const createRefreshToken = new utils_1.UtilCreateRefreshToken();
    const createAccessToken = new utils_1.UtilCreateAccessToken();
    const addAccountRepository = new add_account_repository_1.AddAccountMongoRepository(createRefreshToken, createAccessToken);
    const SALTS = 10;
    const encrypter = new utils_1.UtilEncrypter(SALTS);
    const addAccount = new add_account_1.DbAddAccount(addAccountRepository, encrypter);
    const signUpController = new sign_up_1.SignUpController(getAccountByEmail, addAccount, (0, sign_up_validation_1.makeSignUpValidation)());
    return new log_1.LogControllerDecorator(signUpController);
};
exports.makeSignUpController = makeSignUpController;
